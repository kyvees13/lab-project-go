// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/info/client": {
            "get": {
                "description": "Get the client IP address and user agent",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.InfoClientPayload"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/info/database": {
            "get": {
                "description": "Get the database version",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.InfoDatabasePayload"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/info/version": {
            "get": {
                "description": "Get the golang version",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Info"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/models.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.InfoGoVersionPayload"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.InfoClientPayload": {
            "type": "object",
            "properties": {
                "IP": {
                    "type": "string"
                },
                "User-Agent": {
                    "type": "string"
                }
            }
        },
        "models.InfoDatabasePayload": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                }
            }
        },
        "models.InfoGoVersionPayload": {
            "type": "object",
            "properties": {
                "goversion": {
                    "type": "string"
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Внутренний код ошибки",
                    "type": "integer"
                },
                "data": {
                    "description": "Основные данные для ответа (может быть nil при ошибке)"
                },
                "message": {
                    "description": "Описание ошибки или успеха",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "My API",
	Description:      "This is a sample server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
